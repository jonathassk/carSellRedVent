// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing components rendering - FirstPage Component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <homePage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="buildYour"
>
          Build your
</p>,
        <p
          className="CarName"
>
          MODEL 
</p>,
        <p
          className="CarName red"
>
          R
</p>,
        <img
          className="car"
          src="car-home.png"
/>,
        <p
          className="begin"
>
          BEGIN 
</p>,
        <img
          className="arrow"
          src="arrow.svg"
/>,
      ],
      "className": "bodyContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Build your",
          "className": "buildYour",
        },
        "ref": null,
        "rendered": "Build your",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "MODEL ",
          "className": "CarName",
        },
        "ref": null,
        "rendered": "MODEL ",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "R",
          "className": "CarName red",
        },
        "ref": null,
        "rendered": "R",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "car",
          "src": "car-home.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "BEGIN ",
          "className": "begin",
        },
        "ref": null,
        "rendered": "BEGIN ",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "arrow",
          "src": "arrow.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="buildYour"
>
            Build your
</p>,
          <p
            className="CarName"
>
            MODEL 
</p>,
          <p
            className="CarName red"
>
            R
</p>,
          <img
            className="car"
            src="car-home.png"
/>,
          <p
            className="begin"
>
            BEGIN 
</p>,
          <img
            className="arrow"
            src="arrow.svg"
/>,
        ],
        "className": "bodyContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Build your",
            "className": "buildYour",
          },
          "ref": null,
          "rendered": "Build your",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "MODEL ",
            "className": "CarName",
          },
          "ref": null,
          "rendered": "MODEL ",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "R",
            "className": "CarName red",
          },
          "ref": null,
          "rendered": "R",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "car",
            "src": "car-home.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "BEGIN ",
            "className": "begin",
          },
          "ref": null,
          "rendered": "BEGIN ",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "arrow",
            "src": "arrow.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`testing components rendering - Footer Component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <footer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="zeroToHundred"
>
          <p
                    className="number red"
          >
                    2.5
          </p>
          <p
                    className="metric red"
          >
                    s
          </p>
          <br />
          <p
                    className="info"
          >
                    from 0 to 100
          </p>
</div>,
        <div
          className="miles"
>
          <p
                    className="number red"
          >
                    420
          </p>
          <p
                    className="metric red"
          >
                    mi
          </p>
          <br />
          <p
                    className="info"
          >
                    miles range
          </p>
</div>,
        <div
          className="maxSpeed"
>
          <p
                    className="number red"
          >
                    250
          </p>
          <p
                    className="metric red"
          >
                    mp/h
          </p>
          <br />
          <p
                    className="info"
          >
                    max speed
          </p>
</div>,
      ],
      "className": "footer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="number red"
>
              2.5
</p>,
            <p
              className="metric red"
>
              s
</p>,
            <br />,
            <p
              className="info"
>
              from 0 to 100
</p>,
          ],
          "className": "zeroToHundred",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "2.5",
              "className": "number red",
            },
            "ref": null,
            "rendered": "2.5",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "s",
              "className": "metric red",
            },
            "ref": null,
            "rendered": "s",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "from 0 to 100",
              "className": "info",
            },
            "ref": null,
            "rendered": "from 0 to 100",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="number red"
>
              420
</p>,
            <p
              className="metric red"
>
              mi
</p>,
            <br />,
            <p
              className="info"
>
              miles range
</p>,
          ],
          "className": "miles",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "420",
              "className": "number red",
            },
            "ref": null,
            "rendered": "420",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "mi",
              "className": "metric red",
            },
            "ref": null,
            "rendered": "mi",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "miles range",
              "className": "info",
            },
            "ref": null,
            "rendered": "miles range",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="number red"
>
              250
</p>,
            <p
              className="metric red"
>
              mp/h
</p>,
            <br />,
            <p
              className="info"
>
              max speed
</p>,
          ],
          "className": "maxSpeed",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "250",
              "className": "number red",
            },
            "ref": null,
            "rendered": "250",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "mp/h",
              "className": "metric red",
            },
            "ref": null,
            "rendered": "mp/h",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "max speed",
              "className": "info",
            },
            "ref": null,
            "rendered": "max speed",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="zeroToHundred"
>
            <p
                        className="number red"
            >
                        2.5
            </p>
            <p
                        className="metric red"
            >
                        s
            </p>
            <br />
            <p
                        className="info"
            >
                        from 0 to 100
            </p>
</div>,
          <div
            className="miles"
>
            <p
                        className="number red"
            >
                        420
            </p>
            <p
                        className="metric red"
            >
                        mi
            </p>
            <br />
            <p
                        className="info"
            >
                        miles range
            </p>
</div>,
          <div
            className="maxSpeed"
>
            <p
                        className="number red"
            >
                        250
            </p>
            <p
                        className="metric red"
            >
                        mp/h
            </p>
            <br />
            <p
                        className="info"
            >
                        max speed
            </p>
</div>,
        ],
        "className": "footer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="number red"
>
                2.5
</p>,
              <p
                className="metric red"
>
                s
</p>,
              <br />,
              <p
                className="info"
>
                from 0 to 100
</p>,
            ],
            "className": "zeroToHundred",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "2.5",
                "className": "number red",
              },
              "ref": null,
              "rendered": "2.5",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "s",
                "className": "metric red",
              },
              "ref": null,
              "rendered": "s",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "from 0 to 100",
                "className": "info",
              },
              "ref": null,
              "rendered": "from 0 to 100",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="number red"
>
                420
</p>,
              <p
                className="metric red"
>
                mi
</p>,
              <br />,
              <p
                className="info"
>
                miles range
</p>,
            ],
            "className": "miles",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "420",
                "className": "number red",
              },
              "ref": null,
              "rendered": "420",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mi",
                "className": "metric red",
              },
              "ref": null,
              "rendered": "mi",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "miles range",
                "className": "info",
              },
              "ref": null,
              "rendered": "miles range",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="number red"
>
                250
</p>,
              <p
                className="metric red"
>
                mp/h
</p>,
              <br />,
              <p
                className="info"
>
                max speed
</p>,
            ],
            "className": "maxSpeed",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "250",
                "className": "number red",
              },
              "ref": null,
              "rendered": "250",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mp/h",
                "className": "metric red",
              },
              "ref": null,
              "rendered": "mp/h",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "max speed",
                "className": "info",
              },
              "ref": null,
              "rendered": "max speed",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`testing components rendering - NavBar Component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="ContainerNav"
>
        <div
                className="logo"
        >
                <img
                        alt="logo"
                        src="RV-logo.svg"
                />
        </div>
        <div
                className="options"
        >
                <button>
                        <p
                                className="buttontextSelected"
                        >
                                Model R
                        </p>
                </button>
                <button>
                        <p
                                className="buttontext"
                        >
                                Model IQ
                        </p>
                </button>
                <button>
                        <p
                                className="buttontext"
                        >
                                Model Mobi
                        </p>
                </button>
                <button>
                        <p
                                className="buttontext"
                        >
                                Model Charlie
                        </p>
                </button>
                <button>
                        <p
                                className="buttontext"
                        >
                                Model Italy
                        </p>
                </button>
        </div>
</div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="logo"
>
            <img
                        alt="logo"
                        src="RV-logo.svg"
            />
</div>,
          <div
            className="options"
>
            <button>
                        <p
                                    className="buttontextSelected"
                        >
                                    Model R
                        </p>
            </button>
            <button>
                        <p
                                    className="buttontext"
                        >
                                    Model IQ
                        </p>
            </button>
            <button>
                        <p
                                    className="buttontext"
                        >
                                    Model Mobi
                        </p>
            </button>
            <button>
                        <p
                                    className="buttontext"
                        >
                                    Model Charlie
                        </p>
            </button>
            <button>
                        <p
                                    className="buttontext"
                        >
                                    Model Italy
                        </p>
            </button>
</div>,
        ],
        "className": "ContainerNav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="logo"
              src="RV-logo.svg"
/>,
            "className": "logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "src": "RV-logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button>
                <p
                                className="buttontextSelected"
                >
                                Model R
                </p>
</button>,
              <button>
                <p
                                className="buttontext"
                >
                                Model IQ
                </p>
</button>,
              <button>
                <p
                                className="buttontext"
                >
                                Model Mobi
                </p>
</button>,
              <button>
                <p
                                className="buttontext"
                >
                                Model Charlie
                </p>
</button>,
              <button>
                <p
                                className="buttontext"
                >
                                Model Italy
                </p>
</button>,
            ],
            "className": "options",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="buttontextSelected"
>
                  Model R
</p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Model R",
                  "className": "buttontextSelected",
                },
                "ref": null,
                "rendered": "Model R",
                "type": "p",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="buttontext"
>
                  Model IQ
</p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Model IQ",
                  "className": "buttontext",
                },
                "ref": null,
                "rendered": "Model IQ",
                "type": "p",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="buttontext"
>
                  Model Mobi
</p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Model Mobi",
                  "className": "buttontext",
                },
                "ref": null,
                "rendered": "Model Mobi",
                "type": "p",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="buttontext"
>
                  Model Charlie
</p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Model Charlie",
                  "className": "buttontext",
                },
                "ref": null,
                "rendered": "Model Charlie",
                "type": "p",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="buttontext"
>
                  Model Italy
</p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Model Italy",
                  "className": "buttontext",
                },
                "ref": null,
                "rendered": "Model Italy",
                "type": "p",
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="ContainerNav"
>
          <div
                    className="logo"
          >
                    <img
                              alt="logo"
                              src="RV-logo.svg"
                    />
          </div>
          <div
                    className="options"
          >
                    <button>
                              <p
                                        className="buttontextSelected"
                              >
                                        Model R
                              </p>
                    </button>
                    <button>
                              <p
                                        className="buttontext"
                              >
                                        Model IQ
                              </p>
                    </button>
                    <button>
                              <p
                                        className="buttontext"
                              >
                                        Model Mobi
                              </p>
                    </button>
                    <button>
                              <p
                                        className="buttontext"
                              >
                                        Model Charlie
                              </p>
                    </button>
                    <button>
                              <p
                                        className="buttontext"
                              >
                                        Model Italy
                              </p>
                    </button>
          </div>
</div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="logo"
>
              <img
                            alt="logo"
                            src="RV-logo.svg"
              />
</div>,
            <div
              className="options"
>
              <button>
                            <p
                                          className="buttontextSelected"
                            >
                                          Model R
                            </p>
              </button>
              <button>
                            <p
                                          className="buttontext"
                            >
                                          Model IQ
                            </p>
              </button>
              <button>
                            <p
                                          className="buttontext"
                            >
                                          Model Mobi
                            </p>
              </button>
              <button>
                            <p
                                          className="buttontext"
                            >
                                          Model Charlie
                            </p>
              </button>
              <button>
                            <p
                                          className="buttontext"
                            >
                                          Model Italy
                            </p>
              </button>
</div>,
          ],
          "className": "ContainerNav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="logo"
                src="RV-logo.svg"
/>,
              "className": "logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "src": "RV-logo.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button>
                  <p
                                    className="buttontextSelected"
                  >
                                    Model R
                  </p>
</button>,
                <button>
                  <p
                                    className="buttontext"
                  >
                                    Model IQ
                  </p>
</button>,
                <button>
                  <p
                                    className="buttontext"
                  >
                                    Model Mobi
                  </p>
</button>,
                <button>
                  <p
                                    className="buttontext"
                  >
                                    Model Charlie
                  </p>
</button>,
                <button>
                  <p
                                    className="buttontext"
                  >
                                    Model Italy
                  </p>
</button>,
              ],
              "className": "options",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="buttontextSelected"
>
                    Model R
</p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Model R",
                    "className": "buttontextSelected",
                  },
                  "ref": null,
                  "rendered": "Model R",
                  "type": "p",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="buttontext"
>
                    Model IQ
</p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Model IQ",
                    "className": "buttontext",
                  },
                  "ref": null,
                  "rendered": "Model IQ",
                  "type": "p",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="buttontext"
>
                    Model Mobi
</p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Model Mobi",
                    "className": "buttontext",
                  },
                  "ref": null,
                  "rendered": "Model Mobi",
                  "type": "p",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="buttontext"
>
                    Model Charlie
</p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Model Charlie",
                    "className": "buttontext",
                  },
                  "ref": null,
                  "rendered": "Model Charlie",
                  "type": "p",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="buttontext"
>
                    Model Italy
</p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Model Italy",
                    "className": "buttontext",
                  },
                  "ref": null,
                  "rendered": "Model Italy",
                  "type": "p",
                },
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`testing components rendering App Component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="Container"
>
        <div
                className="containerNav"
        >
                <Navbar />
        </div>
        <div>
                <homePage />
        </div>
        <div>
                <footer />
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="containerNav"
>
            <Navbar />
</div>,
          <div>
            <homePage />
</div>,
          <div>
            <footer />
</div>,
        ],
        "className": "Container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Navbar />,
            "className": "containerNav",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <homePage />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <footer />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="Container"
>
          <div
                    className="containerNav"
          >
                    <Navbar />
          </div>
          <div>
                    <homePage />
          </div>
          <div>
                    <footer />
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="containerNav"
>
              <Navbar />
</div>,
            <div>
              <homePage />
</div>,
            <div>
              <footer />
</div>,
          ],
          "className": "Container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Navbar />,
              "className": "containerNav",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <homePage />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <footer />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
